@using DistanceLessons.Models
@model IEnumerable<MessageStatusWithAuthorModel>

@{
    if (Model.Count() == 0)
    {
        <div class="data_null">@Html.Resource("Layout, data_null_newmessage")</div>
    }
    else
    {
        <ul>
            <div class="item">
                @foreach (MessageStatusWithAuthorModel item in Model)
                {
                    <div class="message">

                        <p>@if (item.Messages.Status == 0)
                           {
                               <font color="red">@Html.Resource("Layout, mes_not_read")</font>
                           }
                           else if (item.Messages.Status == 10)
                           {
                                    <font color="blue">@Html.Resource("Layout, mes_not_read")</font>
                           }
                        </p>
                        <p>@Html.Resource("Layout, mes_topic") @item.Messages.Message.Title</p>
                        <p><span>@Html.Resource("Layout, mes_from")</span> @item.username</p>
                        <p>
                            @Html.Resource("Layout, date") @item.Messages.Message.DateOfSender
                            <span class="right">
                                @Ajax.ActionLink(Html.Resource("Layout, delete"), "DeleteMessage", new { item.Messages.MessageId }, new AjaxOptions { UpdateTargetId = "profile_ajax", InsertionMode = InsertionMode.Replace })
                                @Ajax.ActionLink(Html.Resource("Layout, read"), "ReadMessage", new { item.Messages.MessageId }, new AjaxOptions { UpdateTargetId = "profile_ajax", InsertionMode = InsertionMode.Replace })
                            </span>
                        </p>
                    </div>
                }
            </div>
        </ul>
    }
}