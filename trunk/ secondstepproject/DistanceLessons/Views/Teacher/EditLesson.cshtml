@model DistanceLessons.Models.Lesson

@{
    ViewBag.Title = Html.Resource("Layout, _lesson_edit");
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Html.Resource("Layout, _lesson_edit")</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.LessonId)

     <table class="center" cellspacing="10">
    <tr>
        <td class="error" colspan="2" align="center" style="border-top: 1px solid silver; padding-top: 20px;"></td>
    </tr>
    <tr>
        <td class="editor-label">  @Html.LabelFor(model => model.Title)</td>
        <td class="editor-field"> @Html.TextBoxFor(model => model.Title, new { @class = "editor" }) <font color="red">*</font></td>
    </tr>
    <tr>
        <td></td>
        <td class="error">@Html.ValidationMessageFor(model => model.Title)</td>
    </tr>
    

    <tr>
        <td class="editor-label">  @Html.LabelFor(model => model.Description)</td>
        <td class="editor-field"> @Html.TextAreaFor(model => model.Description, new { @class = "editor" })</td>
    </tr>
    <tr>
        <td></td>
        <td class="error">@Html.ValidationMessageFor(model => model.Description)</td>
    </tr>
    
        <tr>
        <td class="editor-label">  @Html.Label(Html.Resource("Layout, _lesson_url"))</td>
        <td class="editor-field">  @Html.ActionLink(Html.Resource("Layout, detail"), "ShowFile", "Education", new { filename = Model.Text }, null)</td>
    </tr>
    <tr>
        <td></td>
        @{
    Guid mod = (Model.ModuleId.HasValue) ? Model.ModuleId.Value : Guid.Empty;
            }
        <td class="error">@Html.ActionLink(Html.Resource("Layout, _lesson_change_url"), "UploadLesson", new { courseId = Model.CourseId, moduleId = mod, act = Model.LessonId.ToString() })
</td>
    </tr>

    <tr>
        <td class="editor-label">  @Html.LabelFor(model => model.Module.Title)</td>
          @{
    List<DistanceLessons.Models.Module> list = ViewBag.Modules;
    var items = new SelectList(list, "ModuleId", "Title");
          }
        <td class="editor-field">  @Html.DropDownListFor(model => model.ModuleId, @items, new { @class = "editor" })  </td> 
    </tr>
    <tr>
        <td></td>
        <td class="error"><div>  
     <span>@Html.CheckBox("NoModule", false)</span>
        <span>@Html.Resource("Layout, _lesson_to_null_module")</span>
        </div></td>
    </tr>   
    <tr>
        <td class="error" colspan="2" align="center" style="border-top: 1px solid silver; padding-top: 20px;"></td>
    </tr>
      
</table>
    <div class="item" align="right">
                <input type="submit" value=@Html.Resource("Layout, save") />
@if (Model.ModuleId != null)
{ 
    @Html.ActionLink(Html.Resource("Layout, back"), "Lesson", new { id = Model.ModuleId });
}
else
{
   @Html.ActionLink(Html.Resource("Layout, back"), "Course", new { id = Model.CourseId });
}
</div>

}