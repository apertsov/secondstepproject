@model DistanceLessons.Models.TestAndAnswersModel

@{
    ViewBag.Title = Html.Resource("Layout, _tests_edit");
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

@Html.ValidationSummary(true, Html.Resource("Layout, save_error"))

@using (Html.BeginForm("EditTest", "Test", FormMethod.Post))
{
    @Html.ValidationSummary(true)
    <fieldset>
         @Html.HiddenFor(model => model.Test.TestId)
         @Html.HiddenFor(model => model.Test.LessonId)
          <div class="editor-field">
          @Html.EditorFor(model => model.Test.Question)
          @Html.ValidationMessageFor(model => model.Test.Question)
         </div>         
         @for (int j = 0; j < Model.AnswerList.Count; j++)
         {
             @Html.HiddenFor(model => model.AnswerList[j].AnswerId)
             <div class="editor-field">
             @Html.CheckBoxFor(model => model.AnswerList[j].Valid)
             @Html.EditorFor(model => model.AnswerList[j].Answer1)             
             @Html.ActionLink(Html.Resource("Layout, delete"), "DeleteAnswer", "Test", new { id = Model.AnswerList[j].AnswerId, testId = Model.Test.TestId }, new { onclick = "return confirm('" + @Html.Resource("Layout, delete") + "');" })      
             @Html.ValidationMessageFor(model => model.AnswerList[j].Answer1) 
             </div>   
         }

           <div class="item">
        @Html.ActionLink(Html.Resource("Layout, add"), "AddAnswer", new { id = Model.Test.TestId }, null)
        </div>
        <p>
            <input type="submit"  value=@Html.Resource("Layout, save") />
        </p>
        
        </fieldset>
}
